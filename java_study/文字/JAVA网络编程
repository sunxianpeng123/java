1、计算机网络
计算机网络，是指将地理位置不同的具有独立功能的多台计算 机及其外部设备，通过通信线路连接起来，从而实现信息与资 源共享的计算机系统。

2、网络七成结构
由上到下：应用层、表示成、会话层、传输层、网络层、数据链路层、物理层

3、网络通信协议
计算机网络中的计算机可以相互间进行信息交流。而要进行交流，就需要具有一定的规则，我们称之为通讯协议。可以认为， 协议就是一种规范。
相关协议：
 HTTP（ HyperText Transfer Protocol ）超文本传输协议
 IP（ Internet Protocol）互联网协议
 TCP（ Transmission Control Protocol）传输控制协议
 UDP（ User Datagram Protocol）用户数据报协议
 FTP（ File Transfer Protocol）文件传输协议

4、TCP/IP协议经常放在一起使用。在TCP/IP协议下，网络通常也 分成如下四层的结构：
由上到下：应用层（http、ftp ……）、传输层(tcp、udp ……)、网络层(ip ……)、物理与数据链路层(设备、驱动 ……)

5、TCP与UDP
 TCP协议是基于连接的协议，该协议提供点对点的通道，在 两台计算机设备间进行可靠的数据传输。 TCP协议保证一方 发送的数据可以准确的被另一方接收，并且接收数据的顺序 与发送的顺序一致。（ HTTP， FTP）
 UDP协议是基于数据报的协议（不是基于连接的协议），该 协议发送独立的数据报（数据包），各个数据报之间不受影 响。 UDP协议不保证接收端一定会接收到发送端发送的数据 报，同时，也不保证接收数据报
的顺序与发送的顺序一致。 （ ping）

6、IP地址
在计算机网络中，可能会存在多台计算机，我们使用IP地址来区分 每台计算机。可以认为， IP地址就是每台计算机在计算机网络中的 唯一标识。 IP地址使用32位数据来表示。我们习惯上将IP地址分为 4段，每段8位。（ 0~255)

7、端口号
 端口号用来标识不同的程序。端口号使用16位数据来表示。 （ 0~65535）其中， 0~1023端口被常用的系统服务所占用。我 们使用的服务不应使用这些端口。
说明：数据传输时，会携带IP地址与端口号信息。其中， IP地址用 来识别数据传输到哪台计算机，而端口号用来识别，传输到计算 机的哪个应用程序。

8、URL
URL（ Uniform Resource Locator）统一资源定位，为一个字符 串序列，引用网络上的一个资源地址，该地址可以是文件，目 录，数据库查询等。
URL分为两个部分：（二者使用://进行分隔）
 协议标识符 使用哪种协议获取相关资源
 资源名称 资源的详细地址
例如： http://www.somewebsite.com
资源名称的格式取决于所使用的协议，大部分协议的格式如下：
 主机名称
 文件名称（路径）
 端口号
 相关引用

例如： http://127.0.0.1:8080/index.html#bak
说明：通常主机名称与文件名称是必须的，而端口号与相关引 用是可选的。

在Java程序中，使用URL类可以创建一个URL。
绝对URL： URL url = new URL("http://www.google.com");
相对URL： URL url1 = new URL(“http://www.my.com/loc/”);
URL url2 = new URL(url1, “file.zip”);
说明：
 URL是非可变类。

10、URLConnection
当创建URL对象后，就可以通过URL对象的openConnection方 法打开连接，该方法返回一个URLConnection对象。通过调用 URLConnection对象的connect方法与远程指定的资源建立通讯
连接。
说明：通常，我们不需要显式调用connect方法打开连接，当执
行特定的输入输出操作时（例如getInputStream ），连接会自
动打开。
 从URL中读取数据
通过URLConnection类的getInputStream方法可以获得指定URL
的输入流，该方法返回一个InputStream对象。
说明：也可以直接通过URL对象的openStream方法直接获得指
定资源的输入流。
 向URL中写入数据
通过URLConnection类的getOutputStream方法可以获得指定
URL的输出流，该方法返回一个OutputStream对象。通过输出
流对象，我们就可以向服务端写入数据。
说明：客户端的输入流就是服务端的输出流，客户端的输出流
就是服务端的输入流。

11、Socket
 网络上的两个程序建立双向的通讯连接，这个连接的一端称
为一个socket，每个socket会绑定一个特定的端口号。客户
端与服务端通过Socket进行数据读取与写入。
 在Java中，使用Socket与ServerSocket类来实现数据的读取
与写入。
说明：相对于URL， Socket是更低层的操作。当连接web时，应
该优先使用URL相关类来实现。

案例：通过Socket与ServerSocket实现客户端与服务端的通讯
（ TCP）。

12、数据报
 数据报是相互独立的信息，通过网络发送。对于接收端，是
否能接收，接收时间，接收的顺序都是不确定的。
 在Java中，使用DatagramSocket类来发送与接收数据报。使
用DatagramPacket类表示数据报（数据报包）。
案例：通过DatagramSocket与DatagramPacket实现客户端与服
务端的通讯。（ UDP）

13、广播
使用MulticastSocket类实现广播功能。
案例：多客户端发送案例。